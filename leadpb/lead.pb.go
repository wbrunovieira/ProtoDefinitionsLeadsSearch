// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: lead.proto

package leadpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LeadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessName          string  `protobuf:"bytes,1,opt,name=business_name,json=businessName,proto3" json:"business_name,omitempty"`
	RegisteredName        string  `protobuf:"bytes,2,opt,name=registered_name,json=registeredName,proto3" json:"registered_name,omitempty"`
	FoundationDate        string  `protobuf:"bytes,3,opt,name=foundation_date,json=foundationDate,proto3" json:"foundation_date,omitempty"`
	Address               string  `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	City                  string  `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	State                 string  `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	Country               string  `protobuf:"bytes,7,opt,name=country,proto3" json:"country,omitempty"`
	ZipCode               string  `protobuf:"bytes,8,opt,name=zip_code,json=zipCode,proto3" json:"zip_code,omitempty"`
	Owner                 string  `protobuf:"bytes,9,opt,name=owner,proto3" json:"owner,omitempty"`
	Source                string  `protobuf:"bytes,10,opt,name=source,proto3" json:"source,omitempty"`
	Phone                 string  `protobuf:"bytes,11,opt,name=phone,proto3" json:"phone,omitempty"`
	Whatsapp              string  `protobuf:"bytes,12,opt,name=whatsapp,proto3" json:"whatsapp,omitempty"`
	Website               string  `protobuf:"bytes,13,opt,name=website,proto3" json:"website,omitempty"`
	Email                 string  `protobuf:"bytes,14,opt,name=email,proto3" json:"email,omitempty"`
	Instagram             string  `protobuf:"bytes,15,opt,name=instagram,proto3" json:"instagram,omitempty"`
	Facebook              string  `protobuf:"bytes,16,opt,name=facebook,proto3" json:"facebook,omitempty"`
	Tiktok                string  `protobuf:"bytes,17,opt,name=tiktok,proto3" json:"tiktok,omitempty"`
	CompanyRegistrationId string  `protobuf:"bytes,18,opt,name=company_registration_id,json=companyRegistrationId,proto3" json:"company_registration_id,omitempty"`
	Rating                float32 `protobuf:"fixed32,19,opt,name=rating,proto3" json:"rating,omitempty"`
	PriceLevel            float32 `protobuf:"fixed32,20,opt,name=price_level,json=priceLevel,proto3" json:"price_level,omitempty"`
	UserRatingsTotal      int32   `protobuf:"varint,21,opt,name=user_ratings_total,json=userRatingsTotal,proto3" json:"user_ratings_total,omitempty"`
}

func (x *LeadRequest) Reset() {
	*x = LeadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lead_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeadRequest) ProtoMessage() {}

func (x *LeadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeadRequest.ProtoReflect.Descriptor instead.
func (*LeadRequest) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{0}
}

func (x *LeadRequest) GetBusinessName() string {
	if x != nil {
		return x.BusinessName
	}
	return ""
}

func (x *LeadRequest) GetRegisteredName() string {
	if x != nil {
		return x.RegisteredName
	}
	return ""
}

func (x *LeadRequest) GetFoundationDate() string {
	if x != nil {
		return x.FoundationDate
	}
	return ""
}

func (x *LeadRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *LeadRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *LeadRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *LeadRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *LeadRequest) GetZipCode() string {
	if x != nil {
		return x.ZipCode
	}
	return ""
}

func (x *LeadRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *LeadRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *LeadRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *LeadRequest) GetWhatsapp() string {
	if x != nil {
		return x.Whatsapp
	}
	return ""
}

func (x *LeadRequest) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *LeadRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *LeadRequest) GetInstagram() string {
	if x != nil {
		return x.Instagram
	}
	return ""
}

func (x *LeadRequest) GetFacebook() string {
	if x != nil {
		return x.Facebook
	}
	return ""
}

func (x *LeadRequest) GetTiktok() string {
	if x != nil {
		return x.Tiktok
	}
	return ""
}

func (x *LeadRequest) GetCompanyRegistrationId() string {
	if x != nil {
		return x.CompanyRegistrationId
	}
	return ""
}

func (x *LeadRequest) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *LeadRequest) GetPriceLevel() float32 {
	if x != nil {
		return x.PriceLevel
	}
	return 0
}

func (x *LeadRequest) GetUserRatingsTotal() int32 {
	if x != nil {
		return x.UserRatingsTotal
	}
	return 0
}

type LeadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *LeadResponse) Reset() {
	*x = LeadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lead_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeadResponse) ProtoMessage() {}

func (x *LeadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeadResponse.ProtoReflect.Descriptor instead.
func (*LeadResponse) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{1}
}

func (x *LeadResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LeadResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_lead_proto protoreflect.FileDescriptor

var file_lead_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6c, 0x65,
	0x61, 0x64, 0x70, 0x62, 0x22, 0xfe, 0x04, 0x0a, 0x0b, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x6f, 0x75,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x7a, 0x69, 0x70,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x7a, 0x69, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x68, 0x61, 0x74,
	0x73, 0x61, 0x70, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x68, 0x61, 0x74,
	0x73, 0x61, 0x70, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x67, 0x72, 0x61,
	0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x67, 0x72,
	0x61, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x13, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x42, 0x0a, 0x0c, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0x47, 0x0a, 0x0b, 0x4c, 0x65, 0x61,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x12, 0x13, 0x2e, 0x6c, 0x65, 0x61, 0x64, 0x70, 0x62,
	0x2e, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6c,
	0x65, 0x61, 0x64, 0x70, 0x62, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x09, 0x5a, 0x07, 0x2f, 0x6c, 0x65, 0x61, 0x64, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lead_proto_rawDescOnce sync.Once
	file_lead_proto_rawDescData = file_lead_proto_rawDesc
)

func file_lead_proto_rawDescGZIP() []byte {
	file_lead_proto_rawDescOnce.Do(func() {
		file_lead_proto_rawDescData = protoimpl.X.CompressGZIP(file_lead_proto_rawDescData)
	})
	return file_lead_proto_rawDescData
}

var file_lead_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_lead_proto_goTypes = []any{
	(*LeadRequest)(nil),  // 0: leadpb.LeadRequest
	(*LeadResponse)(nil), // 1: leadpb.LeadResponse
}
var file_lead_proto_depIdxs = []int32{
	0, // 0: leadpb.LeadService.ReceiveLead:input_type -> leadpb.LeadRequest
	1, // 1: leadpb.LeadService.ReceiveLead:output_type -> leadpb.LeadResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_lead_proto_init() }
func file_lead_proto_init() {
	if File_lead_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lead_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*LeadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lead_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*LeadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lead_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lead_proto_goTypes,
		DependencyIndexes: file_lead_proto_depIdxs,
		MessageInfos:      file_lead_proto_msgTypes,
	}.Build()
	File_lead_proto = out.File
	file_lead_proto_rawDesc = nil
	file_lead_proto_goTypes = nil
	file_lead_proto_depIdxs = nil
}
